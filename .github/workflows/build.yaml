name: Build

on:
  workflow_call:

jobs:
  just_build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install poetry
        run: pip install poetry

      - name: Install dependencies
        run: |
          poetry config virtualenvs.in-project true
          poetry install --no-root --with dev

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract version from pyproject.toml
        run: |
          VERSION=$(grep '^version = ' pyproject.toml | sed 's/version = //;s/"//g')
          echo "APP_VERSION=$VERSION" >> $GITHUB_ENV
          echo "DOCKER_IMAGE=${{ secrets.REGISTRY_USERNAME }}/${{ vars.DOCKER_IMAGE_NAME }}" >> $GITHUB_ENV
          echo "DOCKER_TAG=$VERSION" >> $GITHUB_ENV

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKER_IMAGE }}
          tags: ${{ env.DOCKER_TAG }}

      - name: Build docker image
        uses: docker/build-push-action@v5
        with:
          push: false
          tags: ${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }}
          labels: ${{ steps.meta.outputs.labels }}
          outputs: type=docker,dest=/tmp/image.tar

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: docker-image
          path: /tmp/image.tar

